/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 output_1.gltf 
*/

import React from "react";
import { useGraph } from "@react-three/fiber";
import { useGLTF } from "@react-three/drei";
import { SkeletonUtils } from "three-stdlib";

export function Model({
  onPointerOver = (e) => {},
  onPointerOut = (e) => {},
  onClick = (e) => {},
  ...props
}) {
  const { scene } = useGLTF("/output_1.gltf");
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene]);
  const { nodes, materials } = useGraph(clone);
  const cachedMaterials = React.useMemo(() => {
    return {
      ...materials,
      floorBase: materials["Floor base"],
      darkBrown: materials["Dark brown"],
      warmBrown: materials["Warm brown"],
      paleWhite: materials["Pale white"],
      hotPink: materials["Hot pink"],
      lightPink: materials["Light pink"],
      lighterPink: materials["Lighter pink"],
      greenFont: materials["Green font"],
      floorPlank: materials["Floor plank"],
    };
  }, [materials]);
  return (
    <group {...props} dispose={null}>
      <pointLight
        intensity={0.0358719}
        decay={2}
        color="#ffecce"
        position={[-1.824, 1.375, 2.894]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={0.0630476}
        decay={2}
        color="#ffece1"
        position={[1.997, 3.03, -1.267]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <directionalLight
        intensity={0.05464}
        decay={2}
        color="#ffe2eb"
        position={[-3.635, 4.308, -8.041]}
        rotation={[-2.564, -0.282, -0.154]}
        target={nodes["*back_light"].target}
      >
        <primitive object={nodes["*back_light"].target} position={[0, 0, -1]} />
      </directionalLight>
      <pointLight
        intensity={12.4307933}
        decay={2}
        color="#ffd8c4"
        position={[2.253, 4.105, 2.354]}
        rotation={[-3.088, -0.253, 0.935]}
        scale={0.705}
      />
      <pointLight
        intensity={0.0804401}
        decay={2}
        color="#ffc9c6"
        position={[1.793, 2.211, -1.116]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={0.1402266}
        decay={2}
        color="#ffd7c3"
        position={[-1.442, 1.399, -1.693]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes.Cylinder002.geometry}
        material={nodes.Cylinder002.material}
        position={[-0.365, 0.288, 0.243]}
        rotation={[-2.14, -0.809, 0.619]}
        scale={[1.2, 0.6, 1]}
      />
      <group
        position={[-0.044, 2.227, -1.215]}
        rotation={[2.924, -0.298, -0.198]}
        scale={[-0.034, -0.031, -0.047]}
      >
        <mesh geometry={nodes.Fox.geometry} material={materials.Chalkboard} />
        <mesh
          geometry={nodes.Fox_1.geometry}
          material={materials["Fox head"]}
        />
        <mesh
          geometry={nodes.Fox_2.geometry}
          material={cachedMaterials.greenFont}
        />
        <mesh
          geometry={nodes.Fox_3.geometry}
          material={cachedMaterials.paleWhite}
        />
        <mesh
          geometry={nodes.Fox_4.geometry}
          material={materials["Fox body"]}
        />
        <mesh
          geometry={nodes.Fox_5.geometry}
          material={materials["Fox tail"]}
        />
      </group>
      <group
        position={[3.928, 0.876, -0.801]}
        rotation={[-0.208, 0.002, 0.003]}
      >
        <mesh
          geometry={nodes.Sign.geometry}
          material={cachedMaterials.floorBase}
        />
        <mesh
          geometry={nodes.Sign_1.geometry}
          material={cachedMaterials.paleWhite}
        />
        <mesh geometry={nodes.Sign_2.geometry} material={materials.Ceiling} />
      </group>
      <group
        position={[-0.152, 2.292, -0.212]}
        rotation={[0, 1.328, 0]}
        scale={0.478}
      >
        <mesh
          geometry={nodes.Cube020.geometry}
          material={cachedMaterials.lighterPink}
        />
        <mesh
          geometry={nodes.Cube020_1.geometry}
          material={cachedMaterials.lightPink}
        />
        <mesh
          geometry={nodes.Cube020_2.geometry}
          material={cachedMaterials.hotPink}
        />
      </group>
      <group position={[0, 2.5, 0]} scale={2.5}>
        <mesh geometry={nodes.Cube002.geometry} material={materials.Wall} />
        <mesh
          geometry={nodes.Cube002_1.geometry}
          material={materials.Ceiling}
        />
        <mesh
          geometry={nodes.Cube002_2.geometry}
          material={cachedMaterials.darkBrown}
        />
      </group>
      <group
        position={[-2.315, 2.165, -1.384]}
        rotation={[0, -1.571, 0]}
        scale={[0.125, 0.144, 0.125]}
      >
        <mesh
          geometry={nodes.Circle001.geometry}
          material={cachedMaterials.warmBrown}
        />
        <mesh
          geometry={nodes.Circle001_1.geometry}
          material={cachedMaterials.darkBrown}
        />
        <mesh
          geometry={nodes.Circle001_2.geometry}
          material={materials.Plant}
        />
      </group>
      <group
        position={[1.686, 2.039, -1.183]}
        rotation={[0, -1.571, 0]}
        scale={0.478}
      >
        <mesh
          geometry={nodes.Cube006_1.geometry}
          material={materials.Countertop}
        />
        <mesh
          geometry={nodes.Cube006_2.geometry}
          material={cachedMaterials.floorBase}
        />
        <mesh
          geometry={nodes.Cube006_3.geometry}
          material={cachedMaterials.paleWhite}
        />
      </group>
      <mesh
        geometry={nodes.lightstring.geometry}
        material={cachedMaterials.floorBase}
        position={[-3.359, 4.424, -0.034]}
        rotation={[Math.PI, 0, Math.PI]}
        scale={[1, 1, 2.242]}
      >
        <group
          position={[-0.998, -0.159, 0.839]}
          rotation={[0, -1.571, 0]}
          scale={[0.031, 0.07, 0.07]}
        >
          <mesh
            geometry={nodes.Sphere010.geometry}
            material={materials.Light}
          />
          <mesh
            geometry={nodes.Sphere010_1.geometry}
            material={cachedMaterials.warmBrown}
          />
          <mesh
            geometry={nodes.Sphere010_2.geometry}
            material={cachedMaterials.floorBase}
          />
        </group>
      </mesh>
      <group position={[0, 2.5, 0]} scale={2.5}>
        <mesh
          geometry={nodes.Cube003.geometry}
          material={cachedMaterials.floorBase}
        />
        <mesh
          geometry={nodes.Cube003_1.geometry}
          material={cachedMaterials.floorPlank}
        />
      </group>
      <mesh
        geometry={nodes.plantvine.geometry}
        material={materials.Plant}
        position={[0.29, 5.495, -2.667]}
        rotation={[0.014, 0.007, 0]}
        scale={[1.004, 1.003, 1]}
      />
      <group
        position={[2.03, 3.194, -2.261]}
        rotation={[-Math.PI / 2, -0.419, -Math.PI / 2]}
        scale={[-0.141, -0.105, -0.141]}
      >
        <mesh
          geometry={nodes.Cylinder005.geometry}
          material={cachedMaterials.hotPink}
        />
        <mesh
          geometry={nodes.Cylinder005_1.geometry}
          material={materials.Ceiling}
        />
        <mesh
          geometry={nodes.Cylinder005_2.geometry}
          material={materials.Ceiling}
        />
        <mesh
          geometry={nodes.Cylinder005_3.geometry}
          material={cachedMaterials.paleWhite}
        />
        <mesh
          geometry={nodes.Cylinder005_4.geometry}
          material={cachedMaterials.hotPink}
        />
      </group>
      <group
        position={[1.322, 2.19, 0.073]}
        rotation={[0, -0.4, 0]}
        scale={0.39}
      >
        <mesh
          name="about"
          geometry={nodes.Basket_Group002.geometry}
          material={materials.Basket}
          onPointerOver={onPointerOver}
          onPointerOut={onPointerOut}
          onClick={onClick}
        />
        <mesh
          name="about"
          geometry={nodes.Basket_Group002_1.geometry}
          material={cachedMaterials.warmBrown}
          onPointerOver={onPointerOver}
          onPointerOut={onPointerOut}
          onClick={onClick}
        />
        <mesh
          name="about"
          geometry={nodes.Basket_Group002_2.geometry}
          material={materials.Plaid}
          onPointerOver={onPointerOver}
          onPointerOut={onPointerOut}
          onClick={onClick}
        />
      </group>
      <mesh
        name="about"
        geometry={nodes.Plane.geometry}
        material={materials["Material.020"]}
        position={[1.322, 2.19, 0.073]}
        rotation={[0, -0.4, 0]}
        scale={0.39}
        onPointerOver={onPointerOver}
        onPointerOut={onPointerOut}
        onClick={onClick}
      />
      <mesh
        geometry={nodes.Cube001.geometry}
        material={cachedMaterials.paleWhite}
        position={[-0.223, 1.08, 0.113]}
        scale={[1, 1, 0.551]}
      />
      <mesh
        geometry={nodes.Cube006.geometry}
        material={materials["Material.071"]}
        position={[2.337, 1.08, -0.017]}
        rotation={[0, Math.PI / 2, 0]}
        scale={[1, 1, 0.551]}
      />
      <group
        position={[1.94, 1.931, -1.776]}
        rotation={[-1.053, -1.277, -1.224]}
        scale={0.802}
      >
        <mesh
          name="tracks"
          geometry={nodes.Donut6_1.geometry}
          material={cachedMaterials.floorBase}
          onPointerOver={onPointerOver}
          onPointerOut={onPointerOut}
          onClick={onClick}
        />
        <mesh
          name="tracks"
          geometry={nodes.Donut6_2.geometry}
          material={materials["Matcha green"]}
          onPointerOver={onPointerOver}
          onPointerOut={onPointerOut}
          onClick={onClick}
        />
      </group>
      <group
        position={[1.842, 1.99, -0.783]}
        rotation={[0.964, 1.15, -0.849]}
        scale={[0.282, 0.361, 0.28]}
      >
        <mesh
          name="tracks"
          geometry={nodes.Donut4_1.geometry}
          material={cachedMaterials.hotPink}
          onPointerOver={onPointerOver}
          onPointerOut={onPointerOut}
          onClick={onClick}
        />
        <mesh
          name="tracks"
          geometry={nodes.Donut4_2.geometry}
          material={materials["Bread brown"]}
          onPointerOver={onPointerOver}
          onPointerOut={onPointerOut}
          onClick={onClick}
        />
      </group>
      <group
        position={[1.978, 1.944, -1.342]}
        rotation={[-1.155, -1.277, -1.224]}
        scale={0.802}
      >
        <mesh
          name="tracks"
          geometry={nodes.Donut5_1.geometry}
          material={cachedMaterials.floorBase}
          onPointerOver={onPointerOver}
          onPointerOut={onPointerOut}
          onClick={onClick}
        />
        <mesh
          name="tracks"
          geometry={nodes.Donut5_2.geometry}
          material={materials["Matcha green"]}
          onPointerOver={onPointerOver}
          onPointerOut={onPointerOut}
          onClick={onClick}
        />
      </group>
      <group
        position={[1.851, 2.479, -1.765]}
        rotation={[-2.582, 1.331, 3.132]}
        scale={0.167}
      >
        <mesh
          name="tracks"
          geometry={nodes.Donut3_1.geometry}
          material={cachedMaterials.floorBase}
          onPointerOver={onPointerOver}
          onPointerOut={onPointerOut}
          onClick={onClick}
        />
        <mesh
          name="tracks"
          geometry={nodes.Donut3_2.geometry}
          material={cachedMaterials.lightPink}
          onPointerOver={onPointerOver}
          onPointerOut={onPointerOut}
          onClick={onClick}
        />
        <mesh
          name="tracks"
          geometry={nodes.Donut3_3.geometry}
          material={cachedMaterials.hotPink}
          onPointerOver={onPointerOver}
          onPointerOut={onPointerOut}
          onClick={onClick}
        />
      </group>
      <mesh
        name="tracks"
        geometry={nodes.Donut1.geometry}
        material={materials["Bread brown"]}
        position={[1.853, 2.483, -0.948]}
        rotation={[0.227, 0.412, -0.274]}
        scale={[0.129, 0.162, 0.13]}
        onPointerOver={onPointerOver}
        onPointerOut={onPointerOut}
        onClick={onClick}
      />
      <mesh
        name="tracks"
        geometry={nodes.Donut2.geometry}
        material={materials["Bread brown"]}
        position={[1.873, 2.488, -1.354]}
        rotation={[-0.035, -0.34, -0.107]}
        scale={[0.129, 0.162, 0.13]}
        onPointerOver={onPointerOver}
        onPointerOut={onPointerOut}
        onClick={onClick}
      />
      <group
        position={[1.811, 2.333, -1.355]}
        rotation={[0, -1.571, 0]}
        scale={[0.73, 0.478, 0.478]}
      >
        <mesh
          name="tracks"
          geometry={nodes.Display_Glass.geometry}
          material={materials.Glass}
          onPointerOver={onPointerOver}
          onPointerOut={onPointerOut}
          onClick={onClick}
        />
        <mesh
          name="tracks"
          geometry={nodes.Display_Glass_1.geometry}
          material={cachedMaterials.darkBrown}
          onPointerOver={onPointerOver}
          onPointerOut={onPointerOut}
          onClick={onClick}
        />
      </group>
      <group
        position={[-0.629, 2.892, -2.625]}
        rotation={[0, -1.571, 0]}
        scale={[0.479, 0.473, 0.439]}
      >
        <mesh
          name="schedule"
          geometry={nodes.Chalkboard_1.geometry}
          material={cachedMaterials.floorPlank}
          onPointerOver={onPointerOver}
          onPointerOut={onPointerOut}
          onClick={onClick}
        />
        <mesh
          name="schedule"
          geometry={nodes.Chalkboard_2.geometry}
          material={materials.Chalkboard}
          onPointerOver={onPointerOver}
          onPointerOut={onPointerOut}
          onClick={onClick}
        />
        <mesh
          name="schedule"
          geometry={nodes.Chalkboard_3.geometry}
          material={cachedMaterials.paleWhite}
          onPointerOver={onPointerOver}
          onPointerOut={onPointerOut}
          onClick={onClick}
        />
      </group>
      <group
        position={[-2.4, 2.157, 1.931]}
        rotation={[-0.104, 0.079, 3.009]}
        scale={[0.001, 0.108, 0.089]}
      >
        <mesh
          name="photos"
          geometry={nodes.Wall_Decor_1.geometry}
          material={materials.Wall}
          onPointerOver={onPointerOver}
          onPointerOut={onPointerOut}
          onClick={onClick}
        />
        <mesh
          name="photos"
          geometry={nodes.Wall_Decor_2.geometry}
          material={cachedMaterials.darkBrown}
          onPointerOver={onPointerOver}
          onPointerOut={onPointerOut}
          onClick={onClick}
        />
        <mesh
          geometry={nodes.Wall_Decor_3.geometry}
          material={cachedMaterials.warmBrown}
        />
        <mesh
          geometry={nodes.Wall_Decor_4.geometry}
          material={materials.Plant}
        />
        <mesh
          geometry={nodes.Wall_Decor_5.geometry}
          material={cachedMaterials.floorBase}
        />
        <mesh
          name="photos"
          geometry={nodes.Wall_Decor_6.geometry}
          material={cachedMaterials.darkBrown}
          onPointerOver={onPointerOver}
          onPointerOut={onPointerOut}
          onClick={onClick}
        />
        <mesh
          name="photos"
          geometry={nodes.Wall_Decor_7.geometry}
          material={cachedMaterials.lightPink}
          onPointerOver={onPointerOver}
          onPointerOut={onPointerOut}
          onClick={onClick}
        />
        <mesh
          name="photos"
          geometry={nodes.Wall_Decor_8.geometry}
          material={cachedMaterials.lighterPink}
          onPointerOver={onPointerOver}
          onPointerOut={onPointerOut}
          onClick={onClick}
        />
        <mesh
          name="photos"
          geometry={nodes.Wall_Decor_9.geometry}
          material={cachedMaterials.floorBase}
          onPointerOver={onPointerOver}
          onPointerOut={onPointerOut}
          onClick={onClick}
        />
        <mesh
          name="photos"
          geometry={nodes.Wall_Decor_10.geometry}
          material={cachedMaterials.warmBrown}
          onPointerOver={onPointerOver}
          onPointerOut={onPointerOut}
          onClick={onClick}
        />
        <mesh
          name="photos"
          geometry={nodes.Wall_Decor_11.geometry}
          material={cachedMaterials.warmBrown}
          onPointerOver={onPointerOver}
          onPointerOut={onPointerOut}
          onClick={onClick}
        />
        <mesh
          name="photos"
          geometry={nodes.Wall_Decor_12.geometry}
          material={cachedMaterials.warmBrown}
          onPointerOver={onPointerOver}
          onPointerOut={onPointerOut}
          onClick={onClick}
        />
        <mesh
          name="photos"
          geometry={nodes.Wall_Decor_13.geometry}
          material={cachedMaterials.warmBrown}
          onPointerOver={onPointerOver}
          onPointerOut={onPointerOut}
          onClick={onClick}
        />
        <mesh
          name="photos"
          geometry={nodes.Wall_Decor_14.geometry}
          material={cachedMaterials.darkBrown}
          onPointerOver={onPointerOver}
          onPointerOut={onPointerOut}
          onClick={onClick}
        />
        <mesh
          name="photos"
          geometry={nodes.Wall_Decor_15.geometry}
          material={cachedMaterials.warmBrown}
          onPointerOver={onPointerOver}
          onPointerOut={onPointerOut}
          onClick={onClick}
        />
        <mesh
          name="photos"
          geometry={nodes.Wall_Decor_16.geometry}
          material={cachedMaterials.darkBrown}
          onPointerOver={onPointerOver}
          onPointerOut={onPointerOut}
          onClick={onClick}
        />
        <mesh
          name="photos"
          geometry={nodes.Wall_Decor_17.geometry}
          material={cachedMaterials.warmBrown}
          onPointerOver={onPointerOver}
          onPointerOut={onPointerOut}
          onClick={onClick}
        />
        <mesh
          name="photos"
          geometry={nodes.Wall_Decor_18.geometry}
          material={cachedMaterials.darkBrown}
          onPointerOver={onPointerOver}
          onPointerOut={onPointerOut}
          onClick={onClick}
        />
        <mesh
          name="photos"
          geometry={nodes.Wall_Decor_19.geometry}
          material={cachedMaterials.warmBrown}
          onPointerOver={onPointerOver}
          onPointerOut={onPointerOut}
          onClick={onClick}
        />
        <mesh
          name="photos"
          geometry={nodes.Wall_Decor_20.geometry}
          material={cachedMaterials.darkBrown}
          onPointerOver={onPointerOver}
          onPointerOut={onPointerOut}
          onClick={onClick}
        />
        <mesh
          name="photos"
          geometry={nodes.Wall_Decor_21.geometry}
          material={cachedMaterials.warmBrown}
          onPointerOver={onPointerOver}
          onPointerOut={onPointerOut}
          onClick={onClick}
        />
      </group>
      <group
        position={[-1.196, 1.993, 1.423]}
        rotation={[0.005, -0.112, -0.002]}
        scale={[0.154, 0.154, 0.085]}
      >
        <mesh
          name="faq"
          geometry={nodes.Table_1.geometry}
          material={cachedMaterials.floorBase}
          onPointerOver={onPointerOver}
          onPointerOut={onPointerOut}
          onClick={onClick}
        />
        <mesh
          name="faq"
          geometry={nodes.Table_2.geometry}
          material={cachedMaterials.floorPlank}
          onPointerOver={onPointerOver}
          onPointerOut={onPointerOut}
          onClick={onClick}
        />
        <mesh
          name="faq"
          geometry={nodes.Table_3.geometry}
          material={cachedMaterials.floorPlank}
          onPointerOver={onPointerOver}
          onPointerOut={onPointerOut}
          onClick={onClick}
        />
        <mesh
          name="faq"
          geometry={nodes.Table_4.geometry}
          material={cachedMaterials.lightPink}
          onPointerOver={onPointerOver}
          onPointerOut={onPointerOut}
          onClick={onClick}
        />
        <mesh
          name="faq"
          geometry={nodes.Table_5.geometry}
          material={cachedMaterials.floorBase}
          onPointerOver={onPointerOver}
          onPointerOut={onPointerOut}
          onClick={onClick}
        />
        <mesh
          name="faq"
          geometry={nodes.Table_6.geometry}
          material={materials["Mouse ears"]}
          onPointerOver={onPointerOver}
          onPointerOut={onPointerOut}
          onClick={onClick}
        />
        <mesh geometry={nodes.Table_7.geometry} material={materials.Ceiling} />
        <mesh
          geometry={nodes.Table_8.geometry}
          material={cachedMaterials.lightPink}
        />
        <mesh
          geometry={nodes.Table_9.geometry}
          material={cachedMaterials.paleWhite}
        />
        <mesh
          geometry={nodes.Table_10.geometry}
          material={cachedMaterials.hotPink}
        />
        <mesh
          geometry={nodes.Table_11.geometry}
          material={cachedMaterials.darkBrown}
        />
        <mesh
          geometry={nodes.Table_12.geometry}
          material={cachedMaterials.warmBrown}
        />
        <mesh
          geometry={nodes.Table_13.geometry}
          material={cachedMaterials.greenFont}
        />
      </group>
      <group
        position={[3.234, 2.577, -1.225]}
        rotation={[1.368, 0.018, 0.03]}
        scale={1.095}
      >
        <mesh
          name="about"
          geometry={nodes.About_Text.geometry}
          material={cachedMaterials.greenFont}
          onPointerOver={onPointerOver}
          onPointerOut={onPointerOut}
          onClick={onClick}
        />
        <mesh
          name="about"
          geometry={nodes.About_Text_1.geometry}
          material={cachedMaterials.paleWhite}
          onPointerOver={onPointerOver}
          onPointerOut={onPointerOut}
          onClick={onClick}
        />
      </group>
      <group
        position={[3.257, 1.337, -0.956]}
        rotation={[1.368, 0.018, 0.03]}
        scale={1.095}
      >
        <mesh
          name="faq"
          geometry={nodes.FAQ_Text.geometry}
          material={cachedMaterials.greenFont}
          onPointerOver={onPointerOver}
          onPointerOut={onPointerOut}
          onClick={onClick}
        />
        <mesh
          name="faq"
          geometry={nodes.FAQ_Text_1.geometry}
          material={cachedMaterials.paleWhite}
          onPointerOver={onPointerOver}
          onPointerOut={onPointerOut}
          onClick={onClick}
        />
      </group>
      <group
        position={[3.252, 1.638, -1.033]}
        rotation={[1.368, 0.018, 0.03]}
        scale={1.095}
      >
        <mesh
          name="photos"
          geometry={nodes.Photos_Text.geometry}
          material={cachedMaterials.greenFont}
          onPointerOver={onPointerOver}
          onPointerOut={onPointerOut}
          onClick={onClick}
        />
        <mesh
          name="photos"
          geometry={nodes.Photos_Text_1.geometry}
          material={cachedMaterials.paleWhite}
          onPointerOver={onPointerOver}
          onPointerOut={onPointerOut}
          onClick={onClick}
        />
      </group>
      <group
        position={[3.246, 1.938, -1.094]}
        rotation={[1.368, 0.018, 0.03]}
        scale={1.095}
      >
        <mesh
          name="schedule"
          geometry={nodes.Schedule_Text.geometry}
          material={cachedMaterials.greenFont}
          onPointerOver={onPointerOver}
          onPointerOut={onPointerOut}
          onClick={onClick}
        />
        <mesh
          name="schedule"
          geometry={nodes.Schedule_Text_1.geometry}
          material={cachedMaterials.paleWhite}
          onPointerOver={onPointerOver}
          onPointerOut={onPointerOut}
          onClick={onClick}
        />
      </group>
      <group
        position={[3.24, 2.254, -1.159]}
        rotation={[1.368, 0.018, 0.03]}
        scale={1.095}
      >
        <mesh
          name="tracks"
          geometry={nodes.Tracks_Text.geometry}
          material={cachedMaterials.greenFont}
          onPointerOver={onPointerOver}
          onPointerOut={onPointerOut}
          onClick={onClick}
        />
        <mesh
          name="tracks"
          geometry={nodes.Tracks_Text_1.geometry}
          material={cachedMaterials.paleWhite}
          onPointerOver={onPointerOver}
          onPointerOut={onPointerOut}
          onClick={onClick}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/output_1.gltf");
